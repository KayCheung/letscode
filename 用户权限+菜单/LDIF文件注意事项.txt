COMPANY_RESOURCE
表明：Company（57啥的），是否得到了某个资源

rsrc_typ_cd 的类型，查了下，5种
1(product)，2(permission)，5(aocid)，6(altspid)，null(不知道啥情况)

integration脚本中，company permission都直接给了57



RSRC_TO_COMPANY_REL
不知道干嘛用的。分配给 company的permission，也不是放在这个里面


删除时，仅仅就删除 4 个表
RSRC_TO_RSRC_REL
RSRC_TO_COMPANY_REL（不知道和这个表有啥关系）
RESOURC
PRESENTATION


presentation.PRSNTTN_PERMISSIONID（如果不是null，则表明：如果要显示此prsn，则，用户必须要拥有 此处的permissionid）
presentation.PRSNTTN_PRODUCTID   （如果不是null，则表明：如果要显示此prsn，则，用户必须要拥有 此处的productid）
presentation.PRSNTTN_COPERMISSION（如果不是null，则表明：如果要显示此prsn，则，用户必须要拥有 此处的company permission）




我注意到，新加一个 user permission时，需要将这个 user permission
1、挂给 company permission
2、挂给 product。（问题来了：已经挂给 company permission啦。company permission难道不是暗含 已经给了某product嘛）
3、


添加一个 menu item。只需要插入一条数据到 RSRC_TO_RSRC_REL
1、最扯淡的是：RSRC_TO_RSRC_REL，RSRC_ID2 其实是 PRSNTTN_ID（添加 UP/CP 时，是 正儿八经 的 RESOURCE_ID）
2、RSRC_TO_RSRC_REL，只需插入一条数据（将此 menuitem 挂接到 父节点上）
3、PRESENTATION，叶子 menuitem，presentation.prsnttn_permissionid，需要指定此menuitem需要的 user permission
4、PRESENTATION，非叶子 presentationgroup，则根本就不需要指定 presentation.prsnttn_permissionid。好奇怪




添加一个 user permission
（注意：添加一个 UP 时，presentation, resourc 中不需要任何的，permission信息。都在 RSRC_TO_RSRC_REL中来控制）
1、将其 挂接 在 company permission 上（从而：user permission存在的前提是，其所挂接的 company permission 已存在）
2、将其 挂接 在 product 上（其实不明白，已经挂给了company permission，怎么还得再挂给 product 啊）
3、将其 挂接 在 PermissionGroup 上（从而，User Permission页面中，此 UP 可以展现在 某个 父节点下，供你选择 UP）
4、挂接 在 implied 上。意思是：选择此 user permission就会导致 赠送 VisPro,VisPro_Vis（这两个是 rsrc_id）


添加一个 company permission
（注意：添加一个 CP 时，presentation, resourc中，无需任何permission。都在 RSRC_TO_RSRC_REL中来控制）
1、将其 挂接 在 product 上
2、将其 挂接 在 PermissionGroup 上（从而，Company Permission页面中，此 CP 可以展现在 某个 父节点下，供你选择 CP）
3、挂接 在 implied 上。意思是：选择了此 CP，会导致，自动赠送 VisPro_Co，VisPro_Vis（这两个是 rsrc_id）


添加一个 permission group （这里是 user permission group）
（注意：甚至，都 不需要 在 RSRC_TO_RSRC_REL 中插入记录。presentation, resourc中，也没有权限相关的信息）




LDIF时


















