/**
 * 强制类型转换并没有改变参数的位表示，只是改变了如何将这些位解释为一个数字
 * 
 * 强转：就是直接截取后面的bit，截取完成后，遇到的最高位就是新数的符号位（遇到啥就是啥，千万注意，和以前int的符号位没有关系哦）
 * <p>
 * 一、数字强转short后，变成负值 int
 * <p>
 * 十 ：53 191
 * <p>
 * 二 ：0000 0000 0000 0000 1100 1111 1100 0111
 * <p>
 * 十六：00 00 CF C7
 * <p>
 * 强转成 short
 * <p>
 * 十 ：????-->-12,345
 * <p>
 * 二 ：11 0000 0011 1000
 * <p>
 * 十六：CF C7
 * <p>
 * 此数是个负数，其补码表示为：1100 1111 1100 0111，我们来确定这个补码对应的正数是：
 * <p>
 * 1、减一： 1100 1111 1100 0110
 * <p>
 * 2、按位取反： 0011 0000 0011 1001
 * <p>
 * 3、上面这个正数是：12,345
 * <p>
 * 4、所以，此补码表示的负数是：-12,345
 * <p>
 * 
 * 二、数字强转 short 后，依然正值 int
 * <p>
 * 十 ：217,031
 * <p>
 * 二 ：0000 0000 0000 0011 0100 1111 1100 0111
 * <p>
 * 十六：00 03 4F C7
 * <p>
 * 强转成 short 十 ：????-->20,423
 * <p>
 * 二 ：0100 1111 1100 0111
 * <p>
 * 十六：4F C7
 * <p>
 * 此数是个正数，其补码表示为：0100 1111 1100 0111 正数的十进制是：20,423
 * <p>
 */
public class Truncate {
	public static void main(String[] args) {
		int i = 53191;
		int y = 217031;
		System.out.println("i=" + i + " short=" + ((short) i));
		System.out.println("y=" + y + " short=" + ((short) y));
	}
}
